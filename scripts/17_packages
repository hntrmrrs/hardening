function f_package_install {
  echo "[$SCRIPT_COUNT] Installing base packages"

  local APPARMOR
  local AUDITD
  local VM

  APPARMOR="apparmor-profiles apparmor-utils libpam-apparmor"
  AUDITD="auditd audispd-plugins"
  VM=""

  if dmesg | grep -i -E "dmi.*vmware"; then
    VM="open-vm-tools"
  fi

  if dmesg | grep -i -E "dmi.*virtualbox"; then
    VM="virtualbox-guest-dkms virtualbox-guest-utils"
  fi

  if [[ $LXC == "1" ]]; then
    APPARMOR=""
    AUDITD=""
  fi

  echo "postfix postfix/main_mailer_type select Internet Site" | debconf-set-selections
  echo "postfix postfix/mailname string $(hostname -f)" | debconf-set-selections

  local PACKAGE_INSTALL
  PACKAGE_INSTALL="acct aide-common automake autoconf bison clang clangd clang-format clang-tidy clang-tools cracklib-runtime debsums emacs flex gnupg2 golang haveged inetutils-tools inetutils-traceroute libpam-pwquality libpam-tmpdir libtool llvm needrestart npm openjdk-11-dbg openjdk-11-jdk openjdk-11-jre openjdk-11-source openssh-server pass postfix python3 python3-pip python3-virtualenv rkhunter sysstat systemd-coredump tcpd tmux update-notifier-common vlock zsh $APPARMOR $AUDITD $VM"

  for deb_install in $PACKAGE_INSTALL; do
    $APT install --no-install-recommends "$deb_install"
  done

  if [[ -f /etc/default/sysstat ]]; then
    sed -i 's/ENABLED=.*/ENABLED="true"/' /etc/default/sysstat
    systemctl enable sysstat
  fi

  ((SCRIPT_COUNT++))
}

function f_package_remove {
  echo "[$SCRIPT_COUNT] Package removal"

  local PACKAGE_REMOVE
  PACKAGE_REMOVE="apport* autofs avahi* beep pastebinit popularity-contest rsh* talk* tftp* whoopsie xinetd yp-tools ypbind"

  for deb_remove in $PACKAGE_REMOVE; do
    $APT purge "$deb_remove"
  done

  ((SCRIPT_COUNT++))
}
